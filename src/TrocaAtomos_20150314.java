
import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.util.ArrayList;
import java.util.Collections;
import javax.swing.JOptionPane;

/**
 *
 * @author alexandrezamberlan
 * @author sylviovieira
 * @author claudialange
 * @author solangefagan
 */
public class TrocaAtomos_20150314 extends javax.swing.JFrame {

    /**
     * Creates new form TelaInicial
     */
    public TrocaAtomos_20150314() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabelLogoNano = new javax.swing.JLabel();
        jLabelLasimon = new javax.swing.JLabel();
        jLabelSobre = new javax.swing.JLabel();
        jButtonCarregarArquivo = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextAreaArquivoFonte = new javax.swing.JTextArea();
        jLabelTotalAtomos = new javax.swing.JLabel();
        jTextFieldTotalAtomos = new javax.swing.JTextField();
        jLabelAtomosQuantidades = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextAreaAtomosQuantidades = new javax.swing.JTextArea();
        jComboBoxAtomos = new javax.swing.JComboBox();
        jComboBoxPercentual = new javax.swing.JComboBox();
        jButtonExecutarTroca = new javax.swing.JButton();
        jLabelNovoAtomo = new javax.swing.JLabel();
        jTextFieldNovoAtomo = new javax.swing.JTextField();
        jLabelParametroRede = new javax.swing.JLabel();
        jTextFieldParametroRede = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Troca de átomos");
        setResizable(false);

        jLabelLogoNano.setIcon(new javax.swing.ImageIcon(getClass().getResource("/nano.png"))); // NOI18N

        jLabelLasimon.setFont(new java.awt.Font("Lucida Grande", 1, 36)); // NOI18N
        jLabelLasimon.setText("LASIMON");

        jLabelSobre.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        jLabelSobre.setText("Sobre");
        jLabelSobre.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jLabelSobreMousePressed(evt);
            }
        });

        jButtonCarregarArquivo.setText("Carregar Arquivo Fonte");
        jButtonCarregarArquivo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jButtonCarregarArquivoMousePressed(evt);
            }
        });

        jTextAreaArquivoFonte.setEditable(false);
        jTextAreaArquivoFonte.setColumns(20);
        jTextAreaArquivoFonte.setRows(5);
        jTextAreaArquivoFonte.setTabSize(2);
        jTextAreaArquivoFonte.setFocusable(false);
        jScrollPane1.setViewportView(jTextAreaArquivoFonte);

        jLabelTotalAtomos.setText("Total de átomos");

        jTextFieldTotalAtomos.setEditable(false);
        jTextFieldTotalAtomos.setColumns(6);
        jTextFieldTotalAtomos.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextFieldTotalAtomos.setFocusable(false);

        jLabelAtomosQuantidades.setText("Lista átomos");

        jTextAreaAtomosQuantidades.setEditable(false);
        jTextAreaAtomosQuantidades.setColumns(6);
        jTextAreaAtomosQuantidades.setRows(5);
        jTextAreaAtomosQuantidades.setTabSize(2);
        jTextAreaAtomosQuantidades.setFocusable(false);
        jScrollPane2.setViewportView(jTextAreaAtomosQuantidades);

        jComboBoxAtomos.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Átomo a substituir" }));

        jComboBoxPercentual.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Percentual a substituir}));

        jButtonExecutarTroca.setText("Executar");
        jButtonExecutarTroca.setEnabled(false);
        jButtonExecutarTroca.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jButtonExecutarTrocaMousePressed(evt);
            }
        });

        jLabelNovoAtomo.setText("Novo átomo");

        jTextFieldNovoAtomo.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextFieldNovoAtomo.setEnabled(false);

        jLabelParametroRede.setText("Parâmetro de Rede");

        jTextFieldParametroRede.setEditable(false);
        jTextFieldParametroRede.setColumns(6);
        jTextFieldParametroRede.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextFieldParametroRede.setFocusable(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 298, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButtonCarregarArquivo))
                        .addGap(12, 12, 12)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabelAtomosQuantidades)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jTextFieldTotalAtomos)
                                    .addComponent(jLabelTotalAtomos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(47, 47, 47)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabelParametroRede, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jTextFieldParametroRede)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(jComboBoxPercentual, javax.swing.GroupLayout.Alignment.LEADING, 0, 209, Short.MAX_VALUE)
                                        .addComponent(jComboBoxAtomos, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                            .addGap(6, 6, 6)
                                            .addComponent(jLabelNovoAtomo)
                                            .addGap(10, 10, 10)
                                            .addComponent(jTextFieldNovoAtomo)))
                                    .addComponent(jButtonExecutarTroca, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabelLogoNano, javax.swing.GroupLayout.PREFERRED_SIZE, 382, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabelLasimon)
                                .addGap(26, 26, 26))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabelSobre)
                                .addGap(14, 14, 14))))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabelSobre)
                        .addGap(19, 19, 19)
                        .addComponent(jLabelLasimon))
                    .addComponent(jLabelLogoNano))
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButtonCarregarArquivo)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabelTotalAtomos)
                            .addComponent(jLabelParametroRede))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextFieldTotalAtomos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextFieldParametroRede, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabelAtomosQuantidades)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jComboBoxAtomos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jComboBoxPercentual, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabelNovoAtomo)
                                    .addComponent(jTextFieldNovoAtomo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButtonExecutarTroca))
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 275, Short.MAX_VALUE))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jLabelSobreMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelSobreMousePressed
        JOptionPane.showMessageDialog(this,
                "Sistema de troca de átomos"
                + "\nProfessores: Cláudia Lange e Solange Fagan"
                + "\nAlunos: Alexandre Zamberlan e Sylvio Vieira", "Sobre", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_jLabelSobreMousePressed

    private void limpaTela() {
        jTextAreaArquivoFonte.setText("");
        jTextFieldTotalAtomos.setText("");
        jTextFieldParametroRede.setText("");
        jTextAreaAtomosQuantidades.setText("");
        jComboBoxAtomos.removeAllItems();
        jComboBoxAtomos.addItem("Átomo a substituir");
        jComboBoxPercentual.setSelectedIndex(0);
        jButtonExecutarTroca.setEnabled(true);
        jTextFieldNovoAtomo.setText(" ");
        jTextFieldNovoAtomo.setEnabled(true);
        listaAtomosArquivoFonte.clear();
        listaAtomosArquivoSaida.clear();
        listaAtomos.clear();
        listaAtomosSelecionados.clear();
    }

    private void abreMostraArquivoFonte() {
        limpaTela();

        arquivoFonte = Util.carregarArquivo();
        if (arquivoFonte != null) {
            try {
                BufferedReader entrada = new BufferedReader(new FileReader(arquivoFonte));
                String linha;
                int numeroLinha = 0;

                String sigla;
                double x;
                double y;
                double z;
                int posicao;

                while (entrada.ready()) {
                    linha = entrada.readLine();
                    numeroLinha++;
                    jTextAreaArquivoFonte.append(linha);
                    jTextAreaArquivoFonte.append("\n");

                    if (numeroLinha == 2) {
                        jTextFieldParametroRede.setText(linha);
                    }

                    if (numeroLinha > 2) { //descartar as duas primeiras linhas do arquivo fonte
                        //para splitar os dados do atomo da linha
                        String[] atomoNaLinha = linha.split(" +|\t");
                        sigla = atomoNaLinha[0];

                        x = Double.parseDouble(atomoNaLinha[1]);
                        y = Double.parseDouble(atomoNaLinha[2]);
                        z = Double.parseDouble(atomoNaLinha[3]);
                        posicao = numeroLinha - 3; //atomos comecam na linha 3 do arquivo
                        listaAtomosArquivoFonte.add(new Atomo(sigla, x, y, z, posicao));
                    }
                }
                entrada.close();
                jTextFieldTotalAtomos.setText(numeroLinha - 2 + "");
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Problema no arquivo: " + e, "Erro", JOptionPane.ERROR_MESSAGE);
            }

            Util.descobrirFrequencia(listaAtomosArquivoFonte, listaAtomos);

            Util.ordenarListaPente(listaAtomos);

            for (Atomo atomo : listaAtomos) {
                jTextAreaAtomosQuantidades.append(atomo.sigla + "\t - " + atomo.ocorrencia);
                jTextAreaAtomosQuantidades.append("\n");
                jComboBoxAtomos.addItem(atomo.sigla);
            }
        }
    }

    private void executaTroca() {
        if (jComboBoxAtomos.getSelectedIndex() == 0 || jComboBoxPercentual.getSelectedIndex() == 0
                || jTextFieldNovoAtomo.getText().equals(" ")) {
            JOptionPane.showMessageDialog(this, "Falta escolher átomo E/OU\n"
                    + "definir percentual de troca E/OU\n"
                    + "definir novo átomo", "Erro", JOptionPane.ERROR_MESSAGE);
        } else {
            jTextFieldNovoAtomo.setText(jTextFieldNovoAtomo.getText().trim());
            listaAtomosSelecionados.clear();
            listaAtomosArquivoSaida.clear();

            //para copiar o conteúdo da listaAtomosArquivoFonte para listaAtomosArquivoSaida e
            //NAO pegar o endereço
            for (Atomo at : listaAtomosArquivoFonte) {
                listaAtomosArquivoSaida.add(new Atomo(at.sigla, at.x, at.y, at.z, at.posicaoLista));
            }

            int quantidadeAtomosParaTroca = 0;
            for (Atomo atomo : listaAtomos) {
                if (atomo.sigla.equalsIgnoreCase(jComboBoxAtomos.getSelectedItem().toString())) {
                    quantidadeAtomosParaTroca = (int) (atomo.ocorrencia * Integer.parseInt(jComboBoxPercentual.getSelectedItem().toString()) / 100);
                    int continuar = JOptionPane.showConfirmDialog(this, "Confirma a troca do átomo "
                            + jComboBoxAtomos.getSelectedItem() + " por " + jTextFieldNovoAtomo.getText()
                            + "\nem " + quantidadeAtomosParaTroca
                            + " posições no arquivo fonte? ", "Aviso", JOptionPane.OK_CANCEL_OPTION);
                    if (quantidadeAtomosParaTroca == 0) {
                        JOptionPane.showMessageDialog(this, "Quantidade ZERO de átomos para troca", "Erro", JOptionPane.ERROR_MESSAGE);
                    } else {
                        if (continuar == 0) { //continuar
                            for (Atomo at : listaAtomosArquivoSaida) {
                                if (at.sigla.equalsIgnoreCase(jComboBoxAtomos.getSelectedItem().toString())) {
                                    listaAtomosSelecionados.add(at);
                                    //System.out.println(at.sigla + " - " + at.posicaoLista);
                                }
                            }

                            Collections.shuffle(listaAtomosSelecionados);

                            for (int i = 0; i < quantidadeAtomosParaTroca; i++) {
                                //System.out.println(listaAtomosSelecionados.get(i).sigla + " " + listaAtomosSelecionados.get(i).posicaoLista);
                                listaAtomosSelecionados.get(i).sigla = jTextFieldNovoAtomo.getText();
                            }

                            for (int i = 0; i < listaAtomosArquivoSaida.size(); i++) {
                                for (int j = 0; j < listaAtomosSelecionados.size(); j++) {
                                    if (listaAtomosArquivoSaida.get(i).posicaoLista == listaAtomosSelecionados.get(j).posicaoLista) {
                                        listaAtomosArquivoSaida.set(i, listaAtomosSelecionados.get(j));
                                        break;
                                    }
                                }
                            }
                            Util.gerarArquivo(arquivoFonte, listaAtomosArquivoSaida, versao, jTextFieldTotalAtomos.getText(), jTextFieldParametroRede.getText());
                            JOptionPane.showMessageDialog(this, "Arquivo " + arquivoFonte.getName().replace(".", "_" + versao + ".") + " gerado com sucesso", "Sucesso", JOptionPane.INFORMATION_MESSAGE);
                            versao++;
                        }
                    }
                }
            }
        }
    }

    private void jButtonExecutarTrocaMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonExecutarTrocaMousePressed
        executaTroca();
    }//GEN-LAST:event_jButtonExecutarTrocaMousePressed

    private void jButtonCarregarArquivoMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonCarregarArquivoMousePressed
        abreMostraArquivoFonte();
    }//GEN-LAST:event_jButtonCarregarArquivoMousePressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TrocaAtomos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TrocaAtomos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TrocaAtomos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TrocaAtomos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TrocaAtomos().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonCarregarArquivo;
    private javax.swing.JButton jButtonExecutarTroca;
    private javax.swing.JComboBox jComboBoxAtomos;
    private javax.swing.JComboBox jComboBoxPercentual;
    private javax.swing.JLabel jLabelAtomosQuantidades;
    private javax.swing.JLabel jLabelLasimon;
    private javax.swing.JLabel jLabelLogoNano;
    private javax.swing.JLabel jLabelNovoAtomo;
    private javax.swing.JLabel jLabelParametroRede;
    private javax.swing.JLabel jLabelSobre;
    private javax.swing.JLabel jLabelTotalAtomos;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea jTextAreaArquivoFonte;
    private javax.swing.JTextArea jTextAreaAtomosQuantidades;
    private javax.swing.JTextField jTextFieldNovoAtomo;
    private javax.swing.JTextField jTextFieldParametroRede;
    private javax.swing.JTextField jTextFieldTotalAtomos;
    // End of variables declaration//GEN-END:variables

    //para armazenar valores originais
    ArrayList<Atomo> listaAtomosArquivoFonte = new ArrayList<>();
    //para armazenar valores atualizados
    ArrayList<Atomo> listaAtomosArquivoSaida = new ArrayList<>();
    //para garantir controle de duplicidade
    ArrayList<Atomo> listaAtomos = new ArrayList<>();
    //para o atomo selecionado
    ArrayList<Atomo> listaAtomosSelecionados = new ArrayList<>();
    //para abrir o arquivo fonte
    File arquivoFonte;
    //para gravar arquivos de saida
    File arquivoSaida;
    //para controlar as versoes dos arquivos de saída
    int versao = 1;
}
